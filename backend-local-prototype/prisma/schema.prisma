generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/cp317"
}

model Comment {
  idComment Int     @id @default(autoincrement())
  title     String? @db.VarChar(45)
  author    String? @db.VarChar(45)
  comment   String? @db.VarChar(256)
  placeID   Int?
  Place     Place?  @relation(fields: [placeID], references: [idPlace], onDelete: NoAction, onUpdate: NoAction, map: "comment_place")

  @@index([placeID], map: "comment_place_idx")
}

model Images {
  idImages  Int     @id @default(autoincrement())
  placeID   Int?
  image_url String? @db.VarChar(100)
  Place     Place?  @relation(fields: [placeID], references: [idPlace], onDelete: NoAction, onUpdate: NoAction, map: "image_place")

  @@index([placeID], map: "image_place_idx")
}

model Place {
  idPlace     Int       @id @unique(map: "idPlace_UNIQUE") @default(autoincrement())
  title       String?   @db.VarChar(100)
  address     String?   @db.VarChar(150)
  description String?   @db.VarChar(800)
  like_count  Int?
  images_fk   Int?
  Comment     Comment[]
  Images      Images[]
  Liked       Liked[]
  Rating      Rating[]
  Review      Review[]
}

model Liked {
  idLiked Int    @id @default(autoincrement())
  placeID Int?
  userID  Int?
  Place   Place? @relation(fields: [placeID], references: [idPlace], onDelete: NoAction, onUpdate: NoAction, map: "place_liked")
  User    User?  @relation(fields: [userID], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "user_liked")

  @@index([placeID], map: "place_liked_idx")
  @@index([userID], map: "user_liked_idx")
}

model Rating {
  idRating Int    @id @default(autoincrement())
  placeID  Int?
  rating   Int?
  Place    Place? @relation(fields: [placeID], references: [idPlace], onDelete: NoAction, onUpdate: NoAction, map: "rating_place")

  @@index([placeID], map: "rating_place_idx")
}

model Review {
  idReview    Int     @id @default(autoincrement())
  title       String? @db.VarChar(45)
  description String? @db.VarChar(45)
  placeID     Int?
  userID      Int?
  Place       Place?  @relation(fields: [placeID], references: [idPlace], onDelete: NoAction, onUpdate: NoAction, map: "review_place")
  User        User?   @relation(fields: [userID], references: [idUser], onDelete: NoAction, onUpdate: NoAction, map: "review_user")

  @@index([placeID], map: "review_place_idx")
  @@index([userID], map: "review_user_idx")
}

model User {
  idUser        Int      @id @default(autoincrement())
  username      String?  @db.VarChar(45)
  password      String?  @db.VarChar(45)
  email         String?  @db.VarChar(45)
  name          String?  @db.VarChar(45)
  averageRating Int?
  Liked         Liked[]
  Review        Review[]
}
